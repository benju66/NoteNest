<UserControl x:Class="NoteNest.UI.Controls.Workspace.PaneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:workspace="clr-namespace:NoteNest.UI.Controls.Workspace"
             xmlns:converters="clr-namespace:NoteNest.UI.Converters">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/LucideIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:ActivePaneBorderConverter x:Key="ActivePaneBorderConverter"/>
            <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Border BorderThickness="2" 
            BorderBrush="{Binding IsActive, Converter={StaticResource ActivePaneBorderConverter}}"
            Background="Transparent"
            PreviewMouseDown="Border_PreviewMouseDown">
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <!-- Subtle highlight on hover to show pane is clickable -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#08000000"/> <!-- Very subtle gray -->
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Pane header with close button -->
                <RowDefinition Height="*"/>    <!-- Tab content -->
            </Grid.RowDefinitions>
            
            <!-- Pane Header (only visible when 2 panes exist) -->
            <Grid Grid.Row="0" 
                  Height="24" 
                  Background="#F5F5F5"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ShowPaneCloseButton, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button HorizontalAlignment="Right" 
                        VerticalAlignment="Center"
                        Width="20" Height="20"
                        Margin="2"
                        Background="Transparent"
                        BorderThickness="0"
                        ToolTip="Close this pane"
                        Click="ClosePane_Click">
                    <ContentControl Template="{StaticResource LucideCircleX}" 
                                  Width="14" Height="14"
                                  Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#E0E0E0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            
            <!-- Professional TabControl with close buttons -->
            <TabControl Grid.Row="1" 
                       ItemsSource="{Binding Tabs}" 
                       SelectedItem="{Binding SelectedTab, Mode=TwoWay}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       GotFocus="TabControl_GotFocus">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <!-- Professional tab header with close button (from Milestone 1) -->
                        <Grid MaxWidth="200" ToolTip="{Binding Note.FilePath}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>       <!-- Title -->
                                <ColumnDefinition Width="Auto"/>    <!-- Dirty indicator -->
                                <ColumnDefinition Width="24"/>      <!-- Close button -->
                            </Grid.ColumnDefinitions>
                            
                            <!-- Title with ellipsis truncation -->
                            <TextBlock Grid.Column="0" 
                                       Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       Margin="8,4,4,4"
                                       VerticalAlignment="Center"/>
                            
                            <!-- Dirty indicator -->
                            <TextBlock Grid.Column="1" 
                                       Text="Â·" 
                                       Visibility="{Binding IsDirty, Converter={StaticResource BoolToVisibilityConverter}}"
                                       Foreground="#FFE57A"
                                       FontWeight="Bold"
                                       FontSize="16"
                                       Margin="2,4"
                                       VerticalAlignment="Center"/>
                            
                            <!-- Close button with LucideCircleX icon -->
                            <Button Grid.Column="2"
                                    Click="CloseTab_Click"
                                    Tag="{Binding}"
                                    Width="20" Height="20"
                                    Margin="2,2"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    ToolTip="Close tab (Ctrl+W)">
                                <ContentControl Template="{StaticResource LucideCircleX}" 
                                              Width="14" Height="14"
                                              Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="#888"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="#FFF"/>
                                                <Setter Property="Background" Value="#40FF0000"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <!-- TabContentView hosts the RTF editor -->
                        <workspace:TabContentView DataContext="{Binding}"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"/>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
            
            <!-- Placeholder when no tabs -->
            <TextBlock Text="No tabs in this pane" 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Center" 
                      Foreground="Gray"
                      FontStyle="Italic"
                      IsHitTestVisible="False">
                <TextBlock.Visibility>
                    <Binding Path="Tabs.Count">
                        <Binding.Converter>
                            <converters:CountToVisibilityConverter/>
                        </Binding.Converter>
                    </Binding>
                </TextBlock.Visibility>
            </TextBlock>
        </Grid>
    </Border>
</UserControl>

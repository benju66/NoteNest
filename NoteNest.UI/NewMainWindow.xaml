<Window x:Class="NoteNest.UI.NewMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:NoteNest.UI"
        xmlns:categories="clr-namespace:NoteNest.UI.ViewModels.Categories"
        xmlns:converters="clr-namespace:NoteNest.UI.Converters"
        xmlns:controls="clr-namespace:NoteNest.UI.Controls"
        xmlns:workspace="clr-namespace:NoteNest.UI.Controls.Workspace"
        Title="NoteNest" 
        Height="600" Width="1000"
        WindowStyle="None"
        AllowsTransparency="False"
        ResizeMode="CanResize"
        Background="{DynamicResource AppBackgroundBrush}">
    
    <!-- Modern Custom Title Bar with WindowChrome -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="36"
                     ResizeBorderThickness="8"
                     CornerRadius="0"
                     GlassFrameThickness="0"
                     UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <Window.InputBindings>
        <!-- 🎹 KEYBOARD SHORTCUTS -->
        <KeyBinding Key="S" Modifiers="Control" 
                    Command="{Binding Workspace.SaveTabCommand}" 
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.SaveAllTabsCommand}"/>
        <KeyBinding Key="W" Modifiers="Control" 
                    Command="{Binding Workspace.CloseTabCommand}" 
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        
        <!-- 🎯 SELECTION-BASED SHORTCUTS -->
        <KeyBinding Key="Delete" 
                    Command="{Binding DeleteSelectedCommand}"/>
        <KeyBinding Key="F2" 
                    Command="{Binding RenameSelectedCommand}"/>
        <KeyBinding Key="F5" 
                    Command="{Binding RefreshCommand}"/>
        
        <!-- 🆕 MILESTONE 2A: Split View Shortcuts -->
        <KeyBinding Key="OemBackslash" Modifiers="Control" 
                    Command="{Binding Workspace.SplitVerticalCommand}"/>
        <KeyBinding Key="D1" Modifiers="Control" 
                    Command="{Binding Workspace.SwitchToPaneCommand}" 
                    CommandParameter="0"/>
        <KeyBinding Key="D2" Modifiers="Control" 
                    Command="{Binding Workspace.SwitchToPaneCommand}" 
                    CommandParameter="1"/>
        
        <!-- 🚪 TEAR-OUT: Detach/Redock Operations -->
        <KeyBinding Key="D" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.DetachTabCommand}"
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="Enter" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.RedockTabCommand}"
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="Enter" Modifiers="Control+Alt" 
                    Command="{Binding Workspace.RedockAllTabsCommand}"/>
        
        <!-- ✨ TIER 1: Tab Cycling (Browser/IDE standard) -->
        <KeyBinding Key="Tab" Modifiers="Control" 
                    Command="{Binding Workspace.NextTabCommand}"/>
        <KeyBinding Key="Tab" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.PreviousTabCommand}"/>
        
        <!-- 🚪 TEAR-OUT: Detach/Redock Operations -->
        <KeyBinding Key="D" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.DetachTabCommand}"
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="Enter" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.RedockTabCommand}"
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="Enter" Modifiers="Control+Alt" 
                    Command="{Binding Workspace.RedockAllTabsCommand}"/>
        
        <!-- 📋 TODO PLUGIN: Toggle Right Panel -->
        <KeyBinding Key="B" Modifiers="Control" 
                    Command="{Binding ToggleRightPanelCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <!-- 🎨 LUCIDE ICON LIBRARY - Pre-compiled resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/LucideIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <local:BoolToTextConverter x:Key="BoolToTextConverter"/>
        <converters:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter"/>
            
            <!-- ═══════════════════════════════════════════════════════════════ -->
            <!-- TITLE BAR BUTTON STYLES                                        -->
            <!-- ═══════════════════════════════════════════════════════════════ -->
            
            <!-- Standard Title Bar Button (Settings, More, Minimize, Maximize) -->
            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="36"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource AppTextPrimaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                   BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AppSurfaceHighlightBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AppSurfacePressedBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Close Button (Red hover effect) -->
            <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E81123"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#C50F1F"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Menu Item Button Style (for dropdown items) -->
            <Style x:Key="MenuItemButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="8,6"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="{DynamicResource AppTextPrimaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                   BorderThickness="0"
                                   Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AppSurfaceHighlightBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AppSurfacePressedBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Activity Bar Toggle Button Style -->
            <Style x:Key="ActivityBarToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource AppTextSecondaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Border"
                                   Background="{TemplateBinding Background}"
                                   BorderThickness="0">
                                <Grid>
                                    <!-- Selection indicator (on LEFT since bar is on left edge) -->
                                    <Rectangle x:Name="SelectionIndicator"
                                               Width="3"
                                               HorizontalAlignment="Left"
                                               Fill="{DynamicResource AppAccentBrush}"
                                               Visibility="Collapsed"/>
                                    <ContentPresenter HorizontalAlignment="Center" 
                                                    VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="SelectionIndicator" Property="Visibility" Value="Visible"/>
                                    <Setter Property="Foreground" Value="{DynamicResource AppTextPrimaryBrush}"/>
                                    <Setter Property="Background" Value="{DynamicResource AppSurfaceHighlightBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AppSurfaceHighlightBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AppSurfacePressedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- ═══════════════════════════════════════════════════════════════ -->
        <!-- CUSTOM TITLE BAR - Modern Design                            -->
        <!-- ═══════════════════════════════════════════════════════════════ -->
        <Grid Grid.Row="0" Height="36" 
              Background="{DynamicResource AppSurfaceBrush}"
              WindowChrome.IsHitTestVisibleInChrome="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>  <!-- Logo -->
                <ColumnDefinition Width="*"/>     <!-- Search (centered) -->
                <ColumnDefinition Width="Auto"/>  <!-- Settings, More, Window Controls -->
            </Grid.ColumnDefinitions>
            
            <!-- LEFT: App Logo/Name -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="12,0,0,0" VerticalAlignment="Center">
                <TextBlock Text="NoteNest" 
                          FontSize="14" 
                          FontWeight="SemiBold"
                          Foreground="{DynamicResource AppAccentBrush}"
                          VerticalAlignment="Center"/>
            </StackPanel>
            
            <!-- CENTER: Search Control -->
            <controls:SmartSearchControl Grid.Column="1"
                                        Width="400" 
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        DataContext="{Binding Search}"
                                        ResultSelected="SmartSearch_ResultSelected"
                                        WindowChrome.IsHitTestVisibleInChrome="True"/>
            
            <!-- RIGHT: Settings, More Menu, Window Controls -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                
                <!-- Settings Button -->
                <Button x:Name="SettingsButton"
                       Click="SettingsMenuItem_Click"
                       ToolTip="Settings"
                       Style="{StaticResource TitleBarButtonStyle}"
                       WindowChrome.IsHitTestVisibleInChrome="True">
                    <ContentControl Template="{StaticResource LucideSettings}"
                                   Width="16" Height="16"
                                   Foreground="{DynamicResource AppTextPrimaryBrush}"/>
                </Button>
                
                <!-- More Menu Button -->
                <Button x:Name="MoreMenuButton"
                       Click="MoreMenuButton_Click"
                       ToolTip="More options"
                       Style="{StaticResource TitleBarButtonStyle}"
                       WindowChrome.IsHitTestVisibleInChrome="True">
                    <ContentControl Template="{StaticResource LucideEllipsisVertical}"
                                   Width="16" Height="16"
                                   Foreground="{DynamicResource AppTextPrimaryBrush}"/>
                </Button>
                
                <!-- More Menu Popup -->
                <Popup x:Name="MoreMenuPopup"
                       PlacementTarget="{Binding ElementName=MoreMenuButton}"
                       Placement="Bottom"
                       StaysOpen="False"
                       AllowsTransparency="True"
                       PopupAnimation="Fade">
                    <Border Background="{DynamicResource AppSurfaceBrush}"
                           BorderBrush="{DynamicResource AppBorderBrush}"
                           BorderThickness="1"
                           Padding="4"
                           MinWidth="200">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="2" Opacity="0.3"/>
                        </Border.Effect>
                        <StackPanel>
                            <!-- New Note -->
                            <Button Click="NewNote_Click"
                                   Style="{StaticResource MenuItemButtonStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Template="{StaticResource LucideFilePlus}"
                                                   Width="16" Height="16"
                                                   Margin="0,0,8,0"/>
                                    <TextBlock Text="New Note"/>
                                </StackPanel>
                            </Button>
                            
                            <Separator Margin="4,2"/>
                            
                            <!-- Save -->
                            <Button Click="Save_Click"
                                   Style="{StaticResource MenuItemButtonStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Template="{StaticResource LucideSave}"
                                                   Width="16" Height="16"
                                                   Margin="0,0,8,0"/>
                                    <TextBlock Text="Save"/>
                                    <TextBlock Text="Ctrl+S" 
                                              Foreground="{DynamicResource AppTextSecondaryBrush}"
                                              FontSize="11"
                                              Margin="16,0,0,0"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Save All -->
                            <Button Click="SaveAll_Click"
                                   Style="{StaticResource MenuItemButtonStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Template="{StaticResource LucideSaveAll}"
                                                   Width="16" Height="16"
                                                   Margin="0,0,8,0"/>
                                    <TextBlock Text="Save All"/>
                                    <TextBlock Text="Ctrl+Shift+S" 
                                              Foreground="{DynamicResource AppTextSecondaryBrush}"
                                              FontSize="11"
                                              Margin="16,0,0,0"/>
                                </StackPanel>
                            </Button>
                            
                            <Separator Margin="4,2"/>
                            
                            <!-- Split Editor -->
                            <Button Click="SplitEditor_Click"
                                   Style="{StaticResource MenuItemButtonStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Template="{StaticResource LucideSquareSplitHorizontal}"
                                                   Width="16" Height="16"
                                                   Margin="0,0,8,0"/>
                                    <TextBlock Text="Split Editor"/>
                                    <TextBlock Text="Ctrl+\" 
                                              Foreground="{DynamicResource AppTextSecondaryBrush}"
                                              FontSize="11"
                                              Margin="16,0,0,0"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Refresh -->
                            <Button Click="Refresh_Click"
                                   Style="{StaticResource MenuItemButtonStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Template="{StaticResource LucideRefreshCw}"
                                                   Width="16" Height="16"
                                                   Margin="0,0,8,0"/>
                                    <TextBlock Text="Refresh"/>
                                </StackPanel>
                            </Button>
                            
                            <Separator Margin="4,2"/>
                            
                            <!-- Theme Selector -->
                            <TextBlock Text="Theme" 
                                      FontWeight="SemiBold"
                                      FontSize="11"
                                      Foreground="{DynamicResource AppTextSecondaryBrush}"
                                      Margin="8,4,0,2"/>
                            <ComboBox x:Name="ThemeSelector" 
                                     Margin="8,0"
                                     SelectionChanged="ThemeSelector_SelectionChanged">
                                <ComboBoxItem Content="Light" Tag="Light"/>
                                <ComboBoxItem Content="Dark" Tag="Dark"/>
                                <ComboBoxItem Content="Solarized Light" Tag="SolarizedLight"/>
                                <ComboBoxItem Content="Solarized Dark" Tag="SolarizedDark"/>
                            </ComboBox>
                   </StackPanel>
                    </Border>
                </Popup>
                
                <!-- Window Control Buttons -->
                <Button x:Name="MinimizeButton"
                       Click="MinimizeButton_Click"
                       ToolTip="Minimize"
                       Style="{StaticResource TitleBarButtonStyle}"
                       WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path Data="M0,0 H10" 
                          Stroke="{DynamicResource AppTextPrimaryBrush}"
                          StrokeThickness="1"
                          Stretch="None"/>
                </Button>
                
                <Button x:Name="MaximizeRestoreButton"
                       Click="MaximizeRestoreButton_Click"
                       ToolTip="Maximize"
                       Style="{StaticResource TitleBarButtonStyle}"
                       WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path x:Name="MaximizeIcon"
                          Data="M0,0 H10 V10 H0 Z"
                          Stroke="{DynamicResource AppTextPrimaryBrush}"
                          StrokeThickness="1"
                          Stretch="None"/>
                </Button>
                
                <Button x:Name="CloseButton"
                       Click="CloseButton_Click"
                       ToolTip="Close"
                       Style="{StaticResource TitleBarCloseButtonStyle}"
                       WindowChrome.IsHitTestVisibleInChrome="True">
                    <Path Data="M0,0 L10,10 M10,0 L0,10"
                          Stroke="{DynamicResource AppTextPrimaryBrush}"
                          StrokeThickness="1"
                          Stretch="None"/>
                </Button>
            </StackPanel>
        </Grid>
        
        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48"/>                   <!-- Activity Bar -->
                <ColumnDefinition Width="300" MinWidth="200"/>  <!-- Tree -->
                <ColumnDefinition Width="5"/>                    <!-- Splitter -->
                <ColumnDefinition Width="*"/>                    <!-- Workspace -->
                <ColumnDefinition Width="{Binding IsRightPanelVisible, Converter={StaticResource BoolToGridLengthConverter}, ConverterParameter='300|0'}"/> <!-- Right Panel (animated via binding) -->
            </Grid.ColumnDefinitions>
            
            <!-- Activity Bar -->
            <Border Grid.Column="0" 
                    Background="{DynamicResource AppSurfaceDarkBrush}"
                    BorderBrush="{DynamicResource AppBorderBrush}"
                    BorderThickness="0,0,1,0">
                <ItemsControl ItemsSource="{Binding ActivityBarItems}"
                              VerticalAlignment="Top">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Width="48" Height="48"
                                          IsChecked="{Binding IsActive}"
                                          Command="{Binding Command}"
                                          ToolTip="{Binding Tooltip}"
                                          Style="{DynamicResource ActivityBarToggleButtonStyle}">
                                <ContentControl Template="{Binding IconTemplate}"
                                                Width="24" Height="24"/>
                            </ToggleButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
            
            <!-- ✨ MODERNIZED: Clean panel (removed header for modern appearance) -->
            <Border Grid.Column="1"
                    Background="{DynamicResource AppBackgroundBrush}"
                    BorderBrush="{DynamicResource AppBorderBrush}"
                    BorderThickness="0,0,1,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>      <!-- TreeView -->
                        <RowDefinition Height="Auto"/>   <!-- Loading indicator -->
                    </Grid.RowDefinitions>
                    
                    <!-- Enhanced TreeView with interaction support + VIRTUALIZATION for performance + DRAG & DROP -->
                    <TreeView x:Name="CategoryTreeView"
                              Grid.Row="0" 
                              ItemsSource="{Binding CategoryTree.Categories}"
                              Tag="{Binding}"
                              Loaded="OnTreeViewLoaded"
                              SelectedItemChanged="CategoryTree_SelectedItemChanged"
                              MouseDoubleClick="TreeView_MouseDoubleClick"
                              PreviewKeyDown="TreeView_PreviewKeyDown"
                              Background="{DynamicResource AppBackgroundBrush}"
                              Foreground="{DynamicResource AppTextPrimaryBrush}"
                              BorderBrush="{DynamicResource AppBorderBrush}"
                              VirtualizingPanel.IsVirtualizing="True"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              ScrollViewer.CanContentScroll="True">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <!-- 🚫 HIDE NATIVE EXPANDERS: Use custom template to hide default toggle button -->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TreeViewItem">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                
                                                <!-- Selection indicator bar -->
                                                <Rectangle x:Name="SelectionBar"
                                                           Grid.Row="0"
                                                           Width="3"
                                                           HorizontalAlignment="Left"
                                                           Fill="{DynamicResource AppAccentBrush}"
                                                           Visibility="Collapsed"/>
                                                
                                <!-- Content area with consistent spacing -->
                                                <Border x:Name="ContentBorder"
                                                        Grid.Row="0" 
                                        Background="{TemplateBinding Background}" 
                                        Padding="4,0"
                                                        Margin="3,0,0,0"
                                        MinHeight="26">
                                    <ContentPresenter x:Name="PART_Header" 
                                                      ContentSource="Header"/>
                                </Border>
                                                
                                                <!-- Children container with indentation -->
                                                <ItemsPresenter x:Name="ItemsHost" 
                                                                Grid.Row="1" 
                                                                Margin="20,0,0,0"/>
                                            </Grid>
                                            
                                            <!-- Enhanced triggers with selection indicator -->
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="False">
                                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                
                                                <!-- Selected state with accent bar -->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="SelectionBar" Property="Visibility" Value="Visible"/>
                                                    <Setter TargetName="ContentBorder" Property="Background" 
                                                            Value="{DynamicResource AppAccentLightBrush}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource AppAccentBrush}"/>
                                                </Trigger>
                                                
                                                <!-- Selected but not focused (dimmer) -->
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsSelectionActive" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="ContentBorder" Property="Opacity" Value="0.7"/>
                                                </MultiTrigger>
                                                
                                                <!-- Hover state (only when not selected) -->
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="ContentBorder" Property="Background" 
                                                            Value="{DynamicResource AppSurfaceHighlightBrush}"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <!-- Bind WPF's IsExpanded to ViewModel's IsExpanded -->
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <!-- 🎨 MODERN: Enhanced templates with safe icons and tooltips -->
                            
                            <!-- 📁 Category Context Menu (PlacementTarget binding for proper DataContext) -->
                            <ContextMenu x:Key="CategoryContextMenu">
                                <MenuItem Header="_New Note" 
                                          Command="{Binding PlacementTarget.Tag.NoteOperations.CreateNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="New _Category" 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.CreateCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFolder}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppTextSecondaryBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="_Rename..." 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.RenameCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="_Delete" 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.DeleteCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                                <Separator/>
                                <!-- NEW: Add to Todo Categories -->
                                <MenuItem Header="Add to _Todo Categories" 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.AddToTodoCategoriesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideCheck}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <!-- NEW: Folder Tagging -->
                                <MenuItem Header="Set Folder _Tags..." 
                                          Click="SetFolderTags_Click"
                                          Tag="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideTag}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Remove Folder Tags" 
                                          Click="RemoveFolderTags_Click"
                                          Tag="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideTag}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppTextSecondaryBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                            
                            <!-- 📄 Note Context Menu (PlacementTarget binding for proper DataContext) -->
                            <ContextMenu x:Key="NoteContextMenu">
                                <MenuItem Header="_Open" 
                                          Command="{Binding OpenCommand}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="_Rename..." 
                                          Command="{Binding PlacementTarget.Tag.NoteOperations.RenameNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="_Delete" 
                                          Command="{Binding PlacementTarget.Tag.NoteOperations.DeleteNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                                <Separator/>
                                <!-- NEW: Note Tagging -->
                                <MenuItem Header="Set Note _Tags..." 
                                          Click="SetNoteTags_Click"
                                          Tag="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideTag}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Remove Note Tags" 
                                          Click="RemoveNoteTags_Click"
                                          Tag="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideTag}"
                                                        Width="12" Height="12"
                                                        Foreground="{DynamicResource AppTextSecondaryBrush}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                            
                            <!-- 📁 ROBUST: Category template with fixed-height Grid layout -->
                            <HierarchicalDataTemplate DataType="{x:Type categories:CategoryViewModel}" 
                                                      ItemsSource="{Binding TreeItems}">
                                <!-- GRID ensures consistent heights and prevents clipping -->
                                <Grid Height="26" 
                                      Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                      ContextMenu="{StaticResource CategoryContextMenu}">
                                    <!-- Enhanced tooltip with breadcrumb path and metadata -->
                                    <Grid.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="📁 Folder" FontWeight="Bold" Margin="0,0,0,4"/>
                                                <TextBlock Text="{Binding BreadcrumbPath}" FontSize="11"/>
                                                <TextBlock Margin="0,4,0,0" FontSize="11" Foreground="Gray">
                                                    <Run Text="Items: "/><Run Text="{Binding Children.Count, Mode=OneWay}"/><Run Text=" folders, "/><Run Text="{Binding Notes.Count, Mode=OneWay}"/><Run Text=" notes"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Grid.ToolTip>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/> <!-- Expander -->
                                        <ColumnDefinition Width="28"/> <!-- Icon container with padding -->
                                        <ColumnDefinition Width="*"/>  <!-- Name -->
                                        <ColumnDefinition Width="Auto"/> <!-- Loading indicator -->
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Custom expander button -->
                                    <Button Grid.Column="0"
                                            Command="{Binding ToggleExpandCommand}"
                                            Background="Transparent" 
                                            BorderThickness="0"
                                            Padding="0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding HasPotentialContent, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <ContentControl Width="12" Height="12" Foreground="#FF6B6B6B">
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Setter Property="Template" Value="{StaticResource LucideChevronRight}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                            <Setter Property="Template" Value="{StaticResource LucideChevronDown}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </Button>
                                    
                                    <!-- 🎨 ICON CONTAINER: Fixed size with internal centering -->
                                    <Border Grid.Column="1" 
                                            Width="24" Height="24"
                                            Background="Transparent"
                                            ClipToBounds="False"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center">
                                        <Grid>
                                            <!-- Icon with absolute centering -->
                                            <ContentControl HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Width="20" Height="20"
                                                            Foreground="{DynamicResource AppTextSecondaryBrush}">
                                                <ContentControl.Style>
                                                    <Style TargetType="ContentControl">
                                                        <Setter Property="Template" Value="{StaticResource LucideFolder}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                                <Setter Property="Template" Value="{StaticResource LucideFolderOpen}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="#FF1565C0"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    
                                    <!-- Folder name -->
                                    <TextBlock Grid.Column="2"
                                               Text="{Binding Name}" 
                                               VerticalAlignment="Center"
                                               Margin="4,0,0,0"
                                               FontWeight="Medium"
                                               FontSize="13"
                                               Foreground="{DynamicResource AppTextPrimaryBrush}"/>
                                    
                                    <!-- Loading indicator -->
                                    <TextBlock Grid.Column="3"
                                               Text=" ●" 
                                               Foreground="{DynamicResource AppWarningBrush}"
                                               FontSize="8"
                                               Margin="6,0,6,0"
                                               VerticalAlignment="Center"
                                               Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </Grid>
                            </HierarchicalDataTemplate>
                            
                            <!-- 📄 ENHANCED: Note template with modern Lucide icons -->
                            <DataTemplate DataType="{x:Type categories:NoteItemViewModel}">
                                <Border Background="Transparent" 
                                        Cursor="Hand"
                                        Margin="28,0,4,0"
                                        Padding="4,1"
                                        CornerRadius="2"
                                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                        ContextMenu="{StaticResource NoteContextMenu}">
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" 
                                                      Command="{Binding OpenCommand}"/>
                                        <MouseBinding MouseAction="LeftClick" 
                                                      Command="{Binding SelectCommand}"/>
                                    </Border.InputBindings>
                                    <Border.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="📄 Note" FontWeight="Bold" Margin="0,0,0,4"/>
                                                <TextBlock Text="{Binding Title}" FontSize="11"/>
                                                <TextBlock Text="{Binding CategoryPath}" FontSize="11" Foreground="Gray" Margin="0,2,0,0"/>
                                                <TextBlock Margin="0,4,0,0" FontSize="11" Foreground="Gray">
                                                    <Run Text="Modified: "/><Run Text="{Binding UpdatedAt, StringFormat='{}{0:MMM dd, yyyy HH:mm}', Mode=OneWay}"/>
                                                </TextBlock>
                                                <TextBlock FontSize="11" Foreground="Gray">
                                                    <Run Text="Created: "/><Run Text="{Binding CreatedAt, StringFormat='{}{0:MMM dd, yyyy}', Mode=OneWay}"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Border.ToolTip>
                                    
                                    <StackPanel Orientation="Horizontal">
                                        <!-- 🎨 LUCIDE SVG DOCUMENT ICON - Pre-compiled resource -->
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="14" Height="14"
                                                        Margin="0,0,8,0" 
                                                        VerticalAlignment="Center"
                                                        Foreground="{DynamicResource AppAccentBrush}"/>
                                        
                                        <!-- Note title with improved typography -->
                                        <TextBlock Text="{Binding Title}" 
                                                   VerticalAlignment="Center"
                                                   Foreground="{DynamicResource AppTextPrimaryBrush}" 
                                                   FontSize="13"
                                                   FontWeight="Normal"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    
                    <!-- Loading indicator -->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5"
                                Visibility="{Binding CategoryTree.IsLoading, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="Loading categories..." Foreground="{DynamicResource AppTextSecondaryBrush}" FontStyle="Italic"/>
                    </StackPanel>
                </Grid>
            </Border>
            
            <GridSplitter Grid.Column="2" HorizontalAlignment="Stretch" 
                         Background="{DynamicResource AppBorderBrush}"/>
            
            <!-- ✨ MODERNIZED: Clean workspace area (no header for modern appearance) -->
            <Border Grid.Column="3"
                    Background="{DynamicResource AppBackgroundBrush}"
                    BorderBrush="{DynamicResource AppBorderBrush}"
                    BorderThickness="0">
                <!-- 🆕 Dynamic pane container: Shows 1 or 2 panes based on Workspace.Panes -->
                <workspace:WorkspacePaneContainer DataContext="{Binding Workspace}"/>
            </Border>
            
            <!-- Right Panel (Plugin Host) -->
            <Border Grid.Column="4" 
                    x:Name="RightPanelBorder"
                    Background="{DynamicResource AppBackgroundBrush}"
                    BorderBrush="{DynamicResource AppBorderBrush}"
                    BorderThickness="1,0,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Panel Header -->
                    <Border Grid.Row="0" 
                            Background="{DynamicResource AppSurfaceBrush}"
                            BorderBrush="{DynamicResource AppBorderBrush}"
                            BorderThickness="0,0,0,1"
                            Height="32">
                        <Grid>
                            <TextBlock Text="{Binding ActivePluginTitle}" 
                                       VerticalAlignment="Center"
                                       Margin="12,0,0,0"
                                       FontWeight="Medium"
                                       Foreground="{DynamicResource AppTextPrimaryBrush}"/>
                            <Button HorizontalAlignment="Right"
                                    Width="32" Height="32"
                                    Command="{Binding ToggleRightPanelCommand}"
                                    Style="{StaticResource TitleBarButtonStyle}">
                                <ContentControl Template="{StaticResource LucidePanelRightClose}"
                                                Width="16" Height="16"/>
                            </Button>
                        </Grid>
                    </Border>
                    
                    <!-- Plugin Content Host -->
                    <ContentControl Grid.Row="1" 
                                    x:Name="PluginContentHost"
                                    Content="{Binding ActivePluginContent}"/>
                </Grid>
            </Border>
        </Grid>
        
        <!-- Status Bar -->
        <StatusBar Grid.Row="2"
                  Background="{DynamicResource AppSurfaceBrush}"
                  Foreground="{DynamicResource AppTextPrimaryBrush}"
                  BorderBrush="{DynamicResource AppBorderBrush}">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <!-- Save indicator - shows for 3 seconds after save -->
                    <StackPanel Orientation="Horizontal" 
                                Visibility="{Binding ShowSaveIndicator, Converter={StaticResource BoolToVisibilityConverter}}"
                                Margin="0,0,10,0">
                        <ContentControl Template="{StaticResource LucideFolderCheck}"
                                        Width="14" Height="14"
                                        Foreground="#22C55E"
                                        ToolTip="Saved"
                                        Margin="0,0,4,0"/>
                        <TextBlock Text="Saved" 
                                   Foreground="#22C55E" 
                                   FontSize="11"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                    
                    <!-- App status -->
                    <TextBlock Text="{Binding IsLoading, Converter={StaticResource BoolToTextConverter}}" 
                               Foreground="{DynamicResource AppTextSecondaryBrush}" 
                               FontSize="11"
                               VerticalAlignment="Center"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
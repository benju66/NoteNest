<Window x:Class="NoteNest.UI.NewMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:NoteNest.UI"
        xmlns:categories="clr-namespace:NoteNest.UI.ViewModels.Categories"
        xmlns:converters="clr-namespace:NoteNest.UI.Converters"
        xmlns:controls="clr-namespace:NoteNest.UI.Controls"
        Title="NoteNest - New Architecture" Height="600" Width="1000">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <local:BoolToTextConverter x:Key="BoolToTextConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
               <!-- Enhanced Toolbar with Database Search -->
               <ToolBar Grid.Row="0">
                   <Button Content="New Note" Command="{Binding NoteOperations.CreateNoteCommand}" />
                   <Button Content="Save" Command="{Binding Workspace.SaveTabCommand}" 
                           CommandParameter="{Binding Workspace.SelectedTab}" />
                   <Button Content="Save All" Command="{Binding Workspace.SaveAllTabsCommand}" />
                   <Separator />
                   <Button Content="Refresh" Command="{Binding RefreshCommand}" />
                   <Separator />
                   
                   <!-- 🔍 YOUR EXISTING SOPHISTICATED SEARCH - FTS5 Powered -->
                   <StackPanel Orientation="Horizontal" Margin="10,0">
                       <TextBlock Text="Search:" FontSize="12" VerticalAlignment="Center" Margin="0,0,5,0"/>
                       <controls:SmartSearchControl DataContext="{Binding Search}" 
                                                   Width="300"
                                                   ResultSelected="SmartSearch_ResultSelected"/>
                   </StackPanel>
                   
                   <Separator />
                   <Button Content="Settings" Click="SettingsMenuItem_Click" ToolTip="Open application settings" />
               </ToolBar>
        
        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Enhanced Category Tree -->
            <GroupBox Grid.Column="0" Header="Categories &amp; Notes">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Enhanced TreeView with interaction support -->
                    <TreeView Grid.Row="0" 
                              ItemsSource="{Binding CategoryTree.Categories}"
                              SelectedItemChanged="CategoryTree_SelectedItemChanged"
                              MouseDoubleClick="TreeView_MouseDoubleClick"
                              PreviewKeyDown="TreeView_PreviewKeyDown">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <!-- Hide native WPF expanders, use custom ones only -->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TreeViewItem">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <!-- Content without native expander -->
                                                <Border Grid.Row="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                </Border>
                                                <!-- Children container -->
                                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Visibility="Collapsed"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="True">
                                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <!-- Bind WPF's IsExpanded to ViewModel's IsExpanded -->
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <!-- Template for Category items -->
                            <HierarchicalDataTemplate DataType="{x:Type categories:CategoryViewModel}" 
                                                      ItemsSource="{Binding TreeItems}">
                                <StackPanel Orientation="Horizontal" Margin="2">
                                    <Button Content="{Binding ExpanderIcon}" 
                                            Command="{Binding ToggleExpandCommand}"
                                            Background="Transparent" 
                                            BorderThickness="0"
                                            Padding="2"
                                            FontSize="8"
                                            Visibility="{Binding HasPotentialContent, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <TextBlock Text="{Binding CategoryIcon}" 
                                               Margin="2,0,4,0" 
                                               FontSize="10"
                                               Foreground="Brown"/>
                                    <TextBlock Text="{Binding Name}" 
                                               FontWeight="SemiBold"
                                               Foreground="DarkSlateBlue"/>
                                    <TextBlock Text="{Binding Children.Count, StringFormat=' ({0} folders)'}" 
                                               Foreground="Gray" 
                                               FontSize="9"
                                               Margin="4,0,0,0"
                                               Visibility="{Binding HasChildren, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <TextBlock Text="{Binding Notes.Count, StringFormat=' [{0} notes]'}" 
                                               Foreground="SteelBlue" 
                                               FontSize="9"
                                               Margin="2,0,0,0"
                                               Visibility="{Binding HasNotes, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <TextBlock Text=" [Loading...]" 
                                               Foreground="Orange"
                                               FontSize="8"
                                               Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                            
                            <!-- Template for Note items with interaction -->
                            <DataTemplate DataType="{x:Type categories:NoteItemViewModel}">
                                <Border Background="Transparent" 
                                        Cursor="Hand"
                                        Margin="20,1,2,1"
                                        Padding="2">
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" 
                                                      Command="{Binding OpenCommand}"/>
                                        <MouseBinding MouseAction="LeftClick" 
                                                      Command="{Binding SelectCommand}"/>
                                    </Border.InputBindings>
                                    
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding NoteIcon}" 
                                                   Margin="0,0,4,0" 
                                                   FontSize="9"
                                                   Foreground="DarkGreen"/>
                                        <TextBlock Text="{Binding Title}" 
                                                   Foreground="MidnightBlue" 
                                                   FontSize="11"
                                                   FontWeight="Medium"/>
                                        <TextBlock Text="{Binding UpdatedAt, StringFormat=' (Modified: {0:MMM dd, HH:mm})'}" 
                                                   Foreground="Gray" 
                                                   FontSize="8"
                                                   Margin="4,0,0,0"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    
                    <!-- Loading indicator -->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5"
                                Visibility="{Binding CategoryTree.IsLoading, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="Loading categories..." Foreground="Gray" FontStyle="Italic"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
            
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
            
            <!-- Workspace Area -->
            <GroupBox Grid.Column="2" Header="Workspace">
                <Grid>
                    <!-- 🔥 FIXED: TabControl spans full workspace area for RTF editor display -->
                    <TabControl ItemsSource="{Binding Workspace.OpenTabs}" 
                               SelectedItem="{Binding Workspace.SelectedTab}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch">
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Title}" />
                                    <TextBlock Text="*" Visibility="{Binding IsDirty, Converter={StaticResource BoolToVisibilityConverter}}" 
                                              Foreground="Red" Margin="2,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <!-- 🎯 SOPHISTICATED RTF EDITOR INTEGRATION -->
                                <!-- Displays the complete RTF editor (toolbar + editor) built by NoteTabItem -->
                                <ContentPresenter Content="{Binding TabContent}" 
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"/>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                    
                    <!-- Placeholder when no tabs (behind the TabControl) -->
                    <TextBlock Text="No notes open. Select a category and click 'New Note' to get started." 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Foreground="Gray"
                              Visibility="{Binding Workspace.OpenTabs.Count, Converter={StaticResource CountToVisibilityConverter}}"
                              IsHitTestVisible="False"/>
                </Grid>
            </GroupBox>
        </Grid>
        
        <!-- Status Bar -->
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding IsLoading, Converter={StaticResource BoolToTextConverter}}" 
                               Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding CategoryTree.Categories.Count, StringFormat='Categories: {0}'}"
                               Foreground="Gray" 
                               FontSize="11"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
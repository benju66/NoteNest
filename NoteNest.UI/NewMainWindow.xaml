<Window x:Class="NoteNest.UI.NewMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:NoteNest.UI"
        xmlns:categories="clr-namespace:NoteNest.UI.ViewModels.Categories"
        xmlns:converters="clr-namespace:NoteNest.UI.Converters"
        xmlns:controls="clr-namespace:NoteNest.UI.Controls"
        Title="NoteNest - New Architecture" Height="600" Width="1000">
    <Window.InputBindings>
        <!-- 🎹 KEYBOARD SHORTCUTS -->
        <KeyBinding Key="S" Modifiers="Control" 
                    Command="{Binding Workspace.SaveTabCommand}" 
                    CommandParameter="{Binding Workspace.SelectedTab}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" 
                    Command="{Binding Workspace.SaveAllTabsCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <!-- 🎨 LUCIDE ICON LIBRARY - Pre-compiled resources -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/LucideIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
        <local:BoolToTextConverter x:Key="BoolToTextConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
               <!-- Enhanced Toolbar with Database Search -->
               <ToolBar Grid.Row="0">
                   <Button Content="New Note" Command="{Binding NoteOperations.CreateNoteCommand}" />
                   <Button Content="Save" Command="{Binding Workspace.SaveTabCommand}" 
                           CommandParameter="{Binding Workspace.SelectedTab}" />
                   <Button Content="Save All" Command="{Binding Workspace.SaveAllTabsCommand}" />
                   <Separator />
                   <Button Content="Refresh" Command="{Binding RefreshCommand}" />
                   <Separator />
                   
                   <!-- 🔍 YOUR EXISTING SOPHISTICATED SEARCH - FTS5 Powered -->
                   <StackPanel Orientation="Horizontal" Margin="10,0">
                       <TextBlock Text="Search:" FontSize="12" VerticalAlignment="Center" Margin="0,0,5,0"/>
                       <controls:SmartSearchControl DataContext="{Binding Search}" 
                                                   Width="300"
                                                   ResultSelected="SmartSearch_ResultSelected"/>
                   </StackPanel>
                   
                  <Separator />
                  <!-- 🔧 DIAGNOSTIC: Test Category Commands -->
                  <Button Content="🧪 Test Create Category" 
                          Command="{Binding CategoryOperations.CreateCategoryCommand}"
                          CommandParameter="{Binding CategoryTree.SelectedCategory}"
                          ToolTip="Test if CreateCategoryCommand works"
                          Background="LightYellow"/>
                  <Button Content="🧪 Test Rename Category" 
                          Command="{Binding CategoryOperations.RenameCategoryCommand}"
                          CommandParameter="{Binding CategoryTree.SelectedCategory}"
                          ToolTip="Test if RenameCategoryCommand works"
                          Background="LightYellow"/>
                  <Separator />
                  <Button Content="Settings" Click="SettingsMenuItem_Click" ToolTip="Open application settings" />
              </ToolBar>
        
        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Enhanced Category Tree -->
            <GroupBox Grid.Column="0" Header="Categories &amp; Notes">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Enhanced TreeView with interaction support -->
                    <TreeView Grid.Row="0" 
                              ItemsSource="{Binding CategoryTree.Categories}"
                              Tag="{Binding}"
                              SelectedItemChanged="CategoryTree_SelectedItemChanged"
                              MouseDoubleClick="TreeView_MouseDoubleClick"
                              PreviewKeyDown="TreeView_PreviewKeyDown">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <!-- 🚫 HIDE NATIVE EXPANDERS: Use custom template to hide default toggle button -->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TreeViewItem">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                
                                <!-- Content area with consistent spacing -->
                                <Border Grid.Row="0" 
                                        Background="{TemplateBinding Background}" 
                                        Padding="4,0"
                                        Margin="0"
                                        MinHeight="26">
                                    <ContentPresenter x:Name="PART_Header" 
                                                      ContentSource="Header"/>
                                </Border>
                                                
                                                <!-- Children container with indentation -->
                                                <ItemsPresenter x:Name="ItemsHost" 
                                                                Grid.Row="1" 
                                                                Margin="20,0,0,0"/>
                                            </Grid>
                                            
                                            <!-- Simple triggers (no null property issues) -->
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="False">
                                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="#FFE3F2FD"/>
                                                    <Setter Property="Foreground" Value="#FF1565C0"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFF5F5F5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <!-- Bind WPF's IsExpanded to ViewModel's IsExpanded -->
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <!-- 🎨 MODERN: Enhanced templates with safe icons and tooltips -->
                            
                            <!-- 📁 Category Context Menu (PlacementTarget binding for proper DataContext) -->
                            <ContextMenu x:Key="CategoryContextMenu">
                                <MenuItem Header="_New Note" 
                                          Command="{Binding PlacementTarget.Tag.NoteOperations.CreateNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="12" Height="12"
                                                        Foreground="#FF4A90E2"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="New _Category" 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.CreateCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFolder}"
                                                        Width="12" Height="12"
                                                        Foreground="#FF6B6B6B"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="_Rename..." 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.RenameCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="_Delete" 
                                          Command="{Binding PlacementTarget.Tag.CategoryOperations.DeleteCategoryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"/>
                            </ContextMenu>
                            
                            <!-- 📄 Note Context Menu -->
                            <ContextMenu x:Key="NoteContextMenu">
                                <MenuItem Header="_Open" 
                                          Command="{Binding OpenCommand}">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="12" Height="12"
                                                        Foreground="#FF4A90E2"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="_Rename..." 
                                          Command="{Binding DataContext.NoteOperations.RenameNoteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="_Delete" 
                                          Command="{Binding DataContext.NoteOperations.DeleteNoteCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                          CommandParameter="{Binding}"/>
                            </ContextMenu>
                            
                            <!-- 📁 ROBUST: Category template with fixed-height Grid layout -->
                            <HierarchicalDataTemplate DataType="{x:Type categories:CategoryViewModel}" 
                                                      ItemsSource="{Binding TreeItems}">
                                <!-- GRID ensures consistent heights and prevents clipping -->
                                <Grid Height="26" 
                                      Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                      ContextMenu="{StaticResource CategoryContextMenu}">
                                    <!-- Enhanced tooltip with breadcrumb path and metadata -->
                                    <Grid.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="📁 Folder" FontWeight="Bold" Margin="0,0,0,4"/>
                                                <TextBlock Text="{Binding BreadcrumbPath}" FontSize="11"/>
                                                <TextBlock Margin="0,4,0,0" FontSize="11" Foreground="Gray">
                                                    <Run Text="Items: "/><Run Text="{Binding Children.Count, Mode=OneWay}"/><Run Text=" folders, "/><Run Text="{Binding Notes.Count, Mode=OneWay}"/><Run Text=" notes"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Grid.ToolTip>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/> <!-- Expander -->
                                        <ColumnDefinition Width="28"/> <!-- Icon container with padding -->
                                        <ColumnDefinition Width="*"/>  <!-- Name -->
                                        <ColumnDefinition Width="Auto"/> <!-- Loading indicator -->
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Custom expander button -->
                                    <Button Grid.Column="0"
                                            Command="{Binding ToggleExpandCommand}"
                                            Background="Transparent" 
                                            BorderThickness="0"
                                            Padding="0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding HasPotentialContent, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <ContentControl Width="12" Height="12" Foreground="#FF6B6B6B">
                                            <ContentControl.Style>
                                                <Style TargetType="ContentControl">
                                                    <Setter Property="Template" Value="{StaticResource LucideChevronRight}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                            <Setter Property="Template" Value="{StaticResource LucideChevronDown}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                    </Button>
                                    
                                    <!-- 🎨 ICON CONTAINER: Fixed size with internal centering -->
                                    <Border Grid.Column="1" 
                                            Width="24" Height="24"
                                            Background="Transparent"
                                            ClipToBounds="False"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center">
                                        <Grid>
                                            <!-- Icon with absolute centering -->
                                            <ContentControl HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Width="20" Height="20"
                                                            Foreground="#FF6B6B6B">
                                                <ContentControl.Style>
                                                    <Style TargetType="ContentControl">
                                                        <Setter Property="Template" Value="{StaticResource LucideFolder}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                                <Setter Property="Template" Value="{StaticResource LucideFolderOpen}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="#FF1565C0"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    
                                    <!-- Folder name -->
                                    <TextBlock Grid.Column="2"
                                               Text="{Binding Name}" 
                                               VerticalAlignment="Center"
                                               Margin="4,0,0,0"
                                               FontWeight="Medium"
                                               FontSize="13"
                                               Foreground="#FF2D2D2D"/>
                                    
                                    <!-- Loading indicator -->
                                    <TextBlock Grid.Column="3"
                                               Text=" ●" 
                                               Foreground="#FFFF8C00"
                                               FontSize="8"
                                               Margin="6,0,6,0"
                                               VerticalAlignment="Center"
                                               Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </Grid>
                            </HierarchicalDataTemplate>
                            
                            <!-- 📄 ENHANCED: Note template with modern Lucide icons -->
                            <DataTemplate DataType="{x:Type categories:NoteItemViewModel}">
                                <Border Background="Transparent" 
                                        Cursor="Hand"
                                        Margin="28,0,4,0"
                                        Padding="4,1"
                                        CornerRadius="2"
                                        ContextMenu="{StaticResource NoteContextMenu}">
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" 
                                                      Command="{Binding OpenCommand}"/>
                                        <MouseBinding MouseAction="LeftClick" 
                                                      Command="{Binding SelectCommand}"/>
                                    </Border.InputBindings>
                                    <Border.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="📄 Note" FontWeight="Bold" Margin="0,0,0,4"/>
                                                <TextBlock Text="{Binding Title}" FontSize="11"/>
                                                <TextBlock Text="{Binding CategoryPath}" FontSize="11" Foreground="Gray" Margin="0,2,0,0"/>
                                                <TextBlock Margin="0,4,0,0" FontSize="11" Foreground="Gray">
                                                    <Run Text="Modified: "/><Run Text="{Binding UpdatedAt, StringFormat='{}{0:MMM dd, yyyy HH:mm}', Mode=OneWay}"/>
                                                </TextBlock>
                                                <TextBlock FontSize="11" Foreground="Gray">
                                                    <Run Text="Created: "/><Run Text="{Binding CreatedAt, StringFormat='{}{0:MMM dd, yyyy}', Mode=OneWay}"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Border.ToolTip>
                                    
                                    <StackPanel Orientation="Horizontal">
                                        <!-- 🎨 LUCIDE SVG DOCUMENT ICON - Pre-compiled resource -->
                                        <ContentControl Template="{StaticResource LucideFileText}"
                                                        Width="14" Height="14"
                                                        Margin="0,0,8,0" 
                                                        VerticalAlignment="Center"
                                                        Foreground="#FF4A90E2"/>
                                        
                                        <!-- Note title with improved typography -->
                                        <TextBlock Text="{Binding Title}" 
                                                   VerticalAlignment="Center"
                                                   Foreground="#FF1F1F1F" 
                                                   FontSize="13"
                                                   FontWeight="Normal"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    
                    <!-- Loading indicator -->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5"
                                Visibility="{Binding CategoryTree.IsLoading, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Text="Loading categories..." Foreground="Gray" FontStyle="Italic"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
            
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
            
            <!-- Workspace Area -->
            <GroupBox Grid.Column="2" Header="Workspace">
                <Grid>
                    <!-- 🔥 FIXED: TabControl spans full workspace area for RTF editor display -->
                    <TabControl ItemsSource="{Binding Workspace.OpenTabs}" 
                               SelectedItem="{Binding Workspace.SelectedTab}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch">
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Title}" />
                                    <TextBlock Text="*" Visibility="{Binding IsDirty, Converter={StaticResource BoolToVisibilityConverter}}" 
                                              Foreground="Red" Margin="2,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <!-- 🎯 SOPHISTICATED RTF EDITOR INTEGRATION -->
                                <!-- Displays the complete RTF editor (toolbar + editor) built by NoteTabItem -->
                                <ContentPresenter Content="{Binding TabContent}" 
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"/>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                    
                    <!-- Placeholder when no tabs (behind the TabControl) -->
                    <TextBlock Text="No notes open. Select a category and click 'New Note' to get started." 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center" 
                              Foreground="Gray"
                              Visibility="{Binding Workspace.OpenTabs.Count, Converter={StaticResource CountToVisibilityConverter}}"
                              IsHitTestVisible="False"/>
                </Grid>
            </GroupBox>
        </Grid>
        
        <!-- Status Bar -->
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding IsLoading, Converter={StaticResource BoolToTextConverter}}" 
                               Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding CategoryTree.Categories.Count, StringFormat='Categories: {0}'}"
                               Foreground="Gray" 
                               FontSize="11"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>